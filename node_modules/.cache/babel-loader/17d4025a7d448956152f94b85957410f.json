{"ast":null,"code":"var _jsxFileName = \"/var/www/html/applications/siteGabriela/siteGabriela-frontend/src/pages/Crud/Article/index.js\";\nimport React, { useState, Fragment, useEffect } from 'react';\nimport api from '../../../services/api';\nimport { MDBDataTable } from 'mdbreact';\nimport { FaPlus, FaPen, FaExchangeAlt, FaTrash } from \"react-icons/fa\";\nimport { Button, Modal } from 'react-bootstrap';\nimport swal from 'sweetalert';\nimport { initialize, validFileType, returnFileSize } from '../../../Util';\nimport './styles.css';\nexport default function Article({\n  history\n}) {\n  const [name, setName] = useState('');\n  const [article_id, setArticleId] = useState('');\n  const [subject, setSubject] = useState('');\n  const [content, setContent] = useState('');\n  const [subjects, setSubjects] = useState([]);\n  const [contents, setContents] = useState([]);\n  const [articles, setArticles] = useState([]);\n  const [show, setShow] = useState(false);\n  const [change, setChange] = useState(0);\n  const [pdfs, setPdfs] = useState('');\n  const submitButton = React.createRef(null);\n\n  const handleShow = () => setShow(true);\n\n  const handleClose = () => {\n    setShow(false);\n    setArticleId('');\n    setSubject('');\n    setContent('');\n    setName('');\n  };\n\n  useEffect(history => {\n    let auth = initialize({\n      history\n    });\n\n    async function edit(event, id) {\n      event.preventDefault();\n\n      if (!auth) {\n        history.push('/Login');\n      } else {\n        let response = await api.get(`/articles/${id}`, {\n          headers: {\n            authorization: auth[0].authorization\n          }\n        });\n        response = response.data;\n\n        if (response.result.length > 0) {\n          loadContentsUE(response.result[0].subject_id);\n          setName(response.result[0].name);\n          setArticleId(id);\n          setContent(response.result[0].content_id);\n          setSubject(response.result[0].subject_id);\n          setShow(true);\n        }\n      }\n    }\n\n    async function del(event, id) {\n      event.preventDefault();\n      const willDelete = await swal({\n        title: \"Você tem certeza que irá alterar o status de ativação?\",\n        icon: \"warning\",\n        dangerMode: true\n      });\n\n      if (willDelete) {\n        let response = await api.delete(`/articles/${id}`, {\n          headers: {\n            authorization: auth[0].authorization\n          }\n        });\n        response = response.data;\n\n        if (response.result.length > 0) {\n          swal(\"Alteração realizada com sucesso\");\n          setChange(change + 1);\n        } else {\n          document.getElementById(\"message\").innerHTML = \"Não foi possível alterar!\";\n        }\n      }\n    }\n\n    function returnEditHtml(id) {\n      const editHtml = React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: e => {\n          edit(e, id);\n        },\n        type: \"button\",\n        className: \"btn btn-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(FaPen, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })));\n      return editHtml;\n    }\n\n    function returnDeleteHtml(id) {\n      const deleteHtml = React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: e => {\n          del(e, id);\n        },\n        type: \"button\",\n        className: \"btn btn-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(FaExchangeAlt, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })));\n      return deleteHtml;\n    }\n\n    async function loadArticles() {\n      let response = await api.get('/articles');\n      response = response.data;\n\n      if (response.result.length > 0) {\n        let data = [];\n\n        for (let i = 0; i < response.result.length; i++) {\n          data.push({\n            name: response.result[i].name,\n            subject: response.result[i].subject_name,\n            content: response.result[i].content_name,\n            active: response.result[i].active ? 'Ativo' : 'Inativo',\n            editar: returnEditHtml(response.result[i].article_id),\n            status: returnDeleteHtml(response.result[i].article_id)\n          });\n        }\n\n        setArticles(data);\n      }\n    }\n\n    async function loadSubjects() {\n      let response = await api.get('/subjects');\n      response = response.data;\n\n      if (response.result.length > 0) {\n        let data = [];\n\n        for (let i = 0; i < response.result.length; i++) {\n          if (response.result[i].active === true) {\n            data.push({\n              subject_id: response.result[i].subject_id,\n              name: response.result[i].name\n            });\n          }\n        }\n\n        setSubjects(data);\n      }\n    }\n\n    async function loadContentsUE(subject_id) {\n      let response = await api.get('/contents');\n      response = response.data;\n\n      if (response.result.length > 0) {\n        let data = [];\n\n        for (let i = 0; i < response.result.length; i++) {\n          if (response.result[i].active === true && response.result[i].subject_id === subject_id) {\n            data.push({\n              content_id: response.result[i].content_id,\n              name: response.result[i].name\n            });\n          }\n        }\n\n        setContents(data);\n      }\n    }\n\n    loadArticles();\n    loadSubjects();\n  }, [change]);\n  const data = {\n    columns: [{\n      label: 'Nome',\n      field: 'name',\n      sort: 'asc'\n    }, {\n      label: 'Disciplina',\n      field: 'subject',\n      sort: 'asc'\n    }, {\n      label: 'Conteúdo',\n      field: 'content',\n      sort: 'asc'\n    }, {\n      label: 'Ativo',\n      field: 'active',\n      sort: 'asc'\n    }, {\n      label: 'Editar',\n      field: 'editar',\n      sort: 'asc'\n    }, {\n      label: 'Status',\n      field: 'status',\n      sort: 'asc'\n    }],\n    rows: articles\n  };\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    let auth = initialize({\n      history\n    });\n\n    if (article_id !== '') {\n      let response = await api.put(`/articles/${article_id}`, {\n        name,\n        subject,\n        content\n      }, {\n        headers: {\n          authorization: auth[0].authorization\n        }\n      });\n      response = response.data;\n\n      if (response.result.length > 0) {\n        handleClose();\n        swal(\"Edição realizada com sucesso\");\n        setChange(change + 1);\n      } else {\n        document.getElementById(\"message\").innerHTML = \"Não foi possível editar!\";\n      }\n    } else {\n      let response = await api.post('/articles', {\n        name,\n        subject,\n        content\n      }, {\n        headers: {\n          authorization: auth[0].authorization\n        }\n      });\n      response = response.data;\n\n      if (response.result.length > 0) {\n        let formData = new FormData();\n\n        for (const key of Object.keys(pdfs)) {\n          formData.append('pdfs', pdfs[key]);\n        }\n\n        formData.append('subject', response.result[0].subject_id);\n        response = await api.post('/pdfs', formData, {\n          headers: {\n            authorization: auth[0].authorization\n          }\n        });\n        swal(\"Cadastro realizado com sucesso\");\n      } else {\n        document.getElementById(\"message\").innerHTML = \"Não foi possível cadastrar!\";\n      }\n    }\n  }\n\n  async function loadContents(subject_id) {\n    let response = await api.get('/contents');\n    response = response.data;\n\n    if (response.result.length > 0) {\n      let data = [];\n\n      for (let i = 0; i < response.result.length; i++) {\n        if (response.result[i].active === true && response.result[i].subject_id === subject_id) {\n          data.push({\n            content_id: response.result[i].content_id,\n            name: response.result[i].name\n          });\n        }\n      }\n\n      setContents(data);\n    }\n  }\n\n  function updateFiles(files) {\n    setPdfs(files);\n    const preview = document.querySelector('.preview');\n\n    while (preview.firstChild) {\n      preview.removeChild(preview.firstChild);\n    }\n\n    if (files.length === 0) {\n      const para = document.createElement('p');\n      para.textContent = 'Nenhum arquivo selecionado';\n      preview.appendChild(para);\n    } else {\n      const list = document.createElement('ol');\n      preview.appendChild(list);\n\n      for (const file of files) {\n        const listItem = document.createElement('li');\n        const para = document.createElement('p');\n\n        if (validFileType(file)) {\n          para.textContent = `Arquivo: ${file.name}, Tamanho: ${returnFileSize(file.size)}.`; //const image = document.createElement('img');\n          //image.src = URL.createObjectURL(file);\n          //listItem.appendChild(image);\n\n          listItem.appendChild(para);\n        } else {\n          para.textContent = `Arquivo: ${file.name}: Não é um tipo de arquivo válido. Atualize sua seleção.`;\n          listItem.appendChild(para);\n        }\n\n        list.appendChild(listItem);\n      }\n    }\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"centering\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card card-signin my-5 spacing\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"colorTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315\n    },\n    __self: this\n  }, \"Artigos\"), React.createElement(\"button\", {\n    onClick: handleShow,\n    className: \"btn btn-success col-lg-2 tableAdd\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316\n    },\n    __self: this\n  }, React.createElement(FaPlus, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318\n    },\n    __self: this\n  })), React.createElement(MDBDataTable, {\n    striped: true,\n    bordered: true,\n    small: true,\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320\n    },\n    __self: this\n  })))), React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    animation: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332\n    },\n    __self: this\n  }, \"Artigo\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"form-signin formArticle\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-label-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    id: \"inputName\",\n    className: \"form-control\",\n    placeholder: \"Nome do Artigo\",\n    required: true,\n    value: name,\n    onChange: event => setName(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"inputName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343\n    },\n    __self: this\n  }, \" Nome*\")), React.createElement(\"div\", {\n    className: \"form-label-group margin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    type: \"text\",\n    id: \"selectSubject\",\n    className: \"form-control selectCircle\",\n    required: true,\n    value: subject,\n    onChange: event => {\n      setSubject(event.target.value);\n      loadContents(event.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353\n    },\n    __self: this\n  }, \"Selecione a disciplina\"), subjects.map(subject => React.createElement(\"option\", {\n    key: subject.subject_id,\n    value: subject.subject_id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357\n    },\n    __self: this\n  }, subject.name)))), React.createElement(\"div\", {\n    className: \"form-label-group margin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    type: \"text\",\n    id: \"selectContent\",\n    className: \"form-control selectCircle\",\n    required: true,\n    value: content,\n    onChange: event => setContent(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371\n    },\n    __self: this\n  }, \"Selecione o conte\\xFAdo\"), contents.map(content => React.createElement(\"option\", {\n    key: content.content_id,\n    value: content.content_id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375\n    },\n    __self: this\n  }, content.name)))), React.createElement(\"div\", {\n    className: \"divPdfs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"pdfs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384\n    },\n    __self: this\n  }, \"Choose images to upload (PNG, JPG)\"), React.createElement(\"input\", {\n    type: \"file\",\n    name: \"pdfs\",\n    id: \"pdfs\",\n    accept: \".pdf\",\n    onChange: event => updateFiles(event.target.files),\n    multiple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    class: \"preview\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388\n    },\n    __self: this\n  }, \"Nenhum arquivo selecionado\")), React.createElement(\"div\", {\n    id: \"message\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    ref: submitButton,\n    type: \"submit\",\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393\n    },\n    __self: this\n  }))), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398\n    },\n    __self: this\n  }, \"Fechar\"), React.createElement(Button, {\n    variant: \"primary\",\n    onClick: e => {\n      submitButton.current.click();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401\n    },\n    __self: this\n  }, \"Salvar\"))));\n}","map":{"version":3,"sources":["/var/www/html/applications/siteGabriela/siteGabriela-frontend/src/pages/Crud/Article/index.js"],"names":["React","useState","Fragment","useEffect","api","MDBDataTable","FaPlus","FaPen","FaExchangeAlt","FaTrash","Button","Modal","swal","initialize","validFileType","returnFileSize","Article","history","name","setName","article_id","setArticleId","subject","setSubject","content","setContent","subjects","setSubjects","contents","setContents","articles","setArticles","show","setShow","change","setChange","pdfs","setPdfs","submitButton","createRef","handleShow","handleClose","auth","edit","event","id","preventDefault","push","response","get","headers","authorization","data","result","length","loadContentsUE","subject_id","content_id","del","willDelete","title","icon","dangerMode","delete","document","getElementById","innerHTML","returnEditHtml","editHtml","e","returnDeleteHtml","deleteHtml","loadArticles","i","subject_name","content_name","active","editar","status","loadSubjects","columns","label","field","sort","rows","handleSubmit","put","post","formData","FormData","key","Object","keys","append","loadContents","updateFiles","files","preview","querySelector","firstChild","removeChild","para","createElement","textContent","appendChild","list","file","listItem","size","target","value","map","current","click"],"mappings":"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","sourcesContent":["import React, { useState, Fragment, useEffect } from 'react';\nimport api from '../../../services/api';\nimport { MDBDataTable } from 'mdbreact';\nimport { FaPlus, FaPen, FaExchangeAlt, FaTrash } from \"react-icons/fa\";\nimport { Button, Modal } from 'react-bootstrap';\nimport swal from 'sweetalert';\nimport {initialize, validFileType, returnFileSize} from '../../../Util';\nimport './styles.css'; \n\nexport default function Article({ history }){\n    const [name, setName] = useState('');\n    const [article_id, setArticleId] = useState('');\n    const [subject, setSubject] = useState('');\n    const [content, setContent] = useState('');\n    const [subjects, setSubjects] = useState([]);\n    const [contents, setContents] = useState([]);\n    const [articles, setArticles] = useState([]);\n    const [show, setShow] = useState(false);\n    const [change, setChange] = useState(0);\n    const [pdfs, setPdfs] = useState('');\n    const submitButton = React.createRef(null);\n    \n    const handleShow = () => setShow(true);\n    \n    const handleClose = () => { \n        setShow(false); \n        setArticleId(''); \n        setSubject('');\n        setContent('');\n        setName('');\n    };\n\n    useEffect((history) =>{\n        let auth = initialize({history});\n\n        async function edit(event, id) {\n            event.preventDefault();\n            \n            if(!auth){\n                history.push('/Login');\n            }else{\n    \n                let response = await api.get(`/articles/${id}`, {\n                    headers: {authorization: auth[0].authorization},\n                });\n    \n                response = response.data;\n    \n                if(response.result.length > 0){\n                    loadContentsUE(response.result[0].subject_id);\n                    setName(response.result[0].name);\n                    setArticleId(id);\n                    setContent(response.result[0].content_id);\n                    setSubject(response.result[0].subject_id);\n                    setShow(true);\n                }\n            }\n        } \n    \n        async function del(event, id) {\n            event.preventDefault();\n            const willDelete = await swal({\n                title: \"Você tem certeza que irá alterar o status de ativação?\",\n                icon: \"warning\",\n                dangerMode: true,\n            });\n            if (willDelete) {\n                let response = await api.delete(`/articles/${id}`, \n                {headers: { authorization: auth[0].authorization }});\n        \n                response = response.data;\n                \n                if(response.result.length > 0){\n                    swal(\"Alteração realizada com sucesso\");\n                    setChange(change+1);\n                }else{\n                    document.getElementById(\"message\").innerHTML = \"Não foi possível alterar!\";\n                } \n            }\n        }\n    \n        function returnEditHtml(id){\n            const editHtml = <Fragment>\n                                <button \n                                    onClick={(e) => {edit(e, id)}} \n                                    type=\"button\" \n                                    className=\"btn btn-warning\"><FaPen />\n                                </button>\n                            </Fragment>\n    \n            return editHtml;\n        }\n    \n        function returnDeleteHtml(id){\n            const deleteHtml =  <Fragment>\n                                    <button \n                                        onClick={(e) => {del(e, id)}}\n                                        type=\"button\" \n                                        className=\"btn btn-danger\"><FaExchangeAlt />\n                                    </button>\n                                </Fragment>\n    \n            return deleteHtml;\n        }\n\n        async function loadArticles(){\n\n            let response = await api.get('/articles');\n\n            response = response.data;\n\n            if(response.result.length > 0){\n                let data = [];\n                for(let i = 0; i < response.result.length; i++){\n                    data.push({\n                        name: response.result[i].name,\n                        subject: response.result[i].subject_name,\n                        content: response.result[i].content_name,\n                        active: (response.result[i].active) ? 'Ativo' : 'Inativo',\n                        editar: returnEditHtml(response.result[i].article_id),\n                        status: returnDeleteHtml(response.result[i].article_id)\n                    });\n                }\n                setArticles(data);\n            }\n        }\n\n        async function loadSubjects(){\n            let response = await api.get('/subjects');\n            response = response.data;\n            \n            if(response.result.length > 0){\n                let data = [];\n                for(let i = 0; i < response.result.length; i++){\n                    if(response.result[i].active === true){\n                        data.push({\n                            subject_id: response.result[i].subject_id,\n                            name: response.result[i].name,\n                        });\n                    }\n                }\n                setSubjects(data);\n            }\n            \n        }\n\n        async function loadContentsUE(subject_id){\n            let response = await api.get('/contents');\n            response = response.data;\n            \n            if(response.result.length > 0){\n                let data = [];\n                for(let i = 0; i < response.result.length; i++){\n                    if(response.result[i].active === true && \n                        response.result[i].subject_id === subject_id){\n                        data.push({\n                            content_id: response.result[i].content_id,\n                            name: response.result[i].name,\n                        });\n                    }\n                }\n                setContents(data);            \n            }  \n        }\n\n        loadArticles();\n        loadSubjects();\n    }, [change]);\n\n    \n    const data = {\n        columns: [\n        {\n            label: 'Nome',\n            field: 'name',\n            sort: 'asc',\n        },\n        {\n            label: 'Disciplina',\n            field: 'subject',\n            sort: 'asc',\n        },\n        {\n            label: 'Conteúdo',\n            field: 'content',\n            sort: 'asc',\n        },\n        {\n            label: 'Ativo',\n            field: 'active',\n            sort: 'asc',\n        },\n        {\n            label: 'Editar',\n            field: 'editar',\n            sort: 'asc',\n        },\n        {\n            label: 'Status',\n            field: 'status',\n            sort: 'asc',\n        },\n        ],\n        rows: articles\n    };\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n\n        let auth = initialize({history});\n\n        if(article_id !== ''){\n            let response = await api.put(`/articles/${article_id}`, \n            { name, subject, content }, \n            {headers: { authorization: auth[0].authorization }});\n    \n            response = response.data;\n            \n            if(response.result.length > 0){\n                handleClose();\n                swal(\"Edição realizada com sucesso\");\n                setChange(change+1);\n            }else{\n                document.getElementById(\"message\").innerHTML = \"Não foi possível editar!\";\n            }\n        }else{\n            let response = await api.post('/articles', \n            { name, subject, content } , \n            {headers: { authorization: auth[0].authorization }});\n    \n            response = response.data;\n            \n            if(response.result.length > 0){\n                let formData = new FormData();\n    \n                for (const key of Object.keys(pdfs)) {\n                    formData.append('pdfs', pdfs[key]);\n                }\n    \n                formData.append('subject', response.result[0].subject_id);\n                \n                response = await api.post('/pdfs', formData, \n                {headers: { authorization: auth[0].authorization }});\n    \n                swal(\"Cadastro realizado com sucesso\"); \n            }else{\n                document.getElementById(\"message\").innerHTML = \"Não foi possível cadastrar!\";\n            } \n        }\n        \n    }\n\n    async function loadContents(subject_id){\n        let response = await api.get('/contents');\n        response = response.data;\n        \n        if(response.result.length > 0){\n            let data = [];\n            for(let i = 0; i < response.result.length; i++){\n                if(response.result[i].active === true && \n                    response.result[i].subject_id === subject_id){\n                    data.push({\n                        content_id: response.result[i].content_id,\n                        name: response.result[i].name,\n                    });\n                }\n            }\n            setContents(data);            \n        }  \n    }\n\n    function updateFiles(files){\n\n        setPdfs(files);\n        const preview = document.querySelector('.preview');\n\n        while(preview.firstChild) {\n            preview.removeChild(preview.firstChild);\n        }\n\n        if(files.length === 0) {\n            const para = document.createElement('p');\n            para.textContent = 'Nenhum arquivo selecionado';\n            preview.appendChild(para);\n        } else {\n            const list = document.createElement('ol');\n            preview.appendChild(list);\n        \n            for(const file of files) {\n                const listItem = document.createElement('li');\n                const para = document.createElement('p');\n                if(validFileType(file)) {\n                    para.textContent = `Arquivo: ${file.name}, Tamanho: ${returnFileSize(file.size)}.`;\n                    //const image = document.createElement('img');\n                    //image.src = URL.createObjectURL(file);\n        \n                    //listItem.appendChild(image);\n                    listItem.appendChild(para);\n                } else {\n                    para.textContent = `Arquivo: ${file.name}: Não é um tipo de arquivo válido. Atualize sua seleção.`;\n                    listItem.appendChild(para);\n                }\n        \n                list.appendChild(listItem);\n            }\n        }\n    }\n    \n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"row\"></div>        \n                    <div className=\"centering\">\n                        <div className=\"card card-signin my-5 spacing\">\n                            <h3 className=\"colorTitle\">Artigos</h3>\n                        <button onClick={handleShow}\n                            className=\"btn btn-success col-lg-2 tableAdd\">\n                            <FaPlus />\n                        </button>  \n                        <MDBDataTable\n                            striped\n                            bordered\n                            small\n                            data={data}\n                        />\n                        </div>\n                    </div>\n            </div>\n\n            <Modal show={show} onHide={handleClose} animation={false}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Artigo</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <form className=\"form-signin formArticle\" onSubmit={handleSubmit}>\n                        <div className=\"form-label-group\">\n                            <input type=\"text\" \n                            id=\"inputName\" \n                            className=\"form-control\" \n                            placeholder=\"Nome do Artigo\" required \n                            value={name}\n                            onChange={event => setName(event.target.value)}/>\n                            <label htmlFor=\"inputName\"> Nome*</label>\n                        </div>\n\n                        <div className=\"form-label-group margin\">\n                            <select type=\"text\" \n                            id=\"selectSubject\" \n                            className=\"form-control selectCircle\" required\n                            value={subject}\n                            onChange={event => {setSubject(event.target.value);\n                            loadContents(event.target.value)}}>\n                            <option value=''>\n                                Selecione a disciplina\n                            </option>\n                            {subjects.map(subject => (\n                                <option key={subject.subject_id} value={subject.subject_id}>\n                                    {subject.name}\n                                </option>\n                            ))}\n                            </select>\n\n                        </div>\n\n                        <div className=\"form-label-group margin\">\n                            <select type=\"text\" \n                            id=\"selectContent\" \n                            className=\"form-control selectCircle\" required\n                            value={content}\n                            onChange={event => setContent(event.target.value)}>\n                            <option value=''>\n                                Selecione o conteúdo\n                            </option>\n                            {contents.map(content => (\n                                <option key={content.content_id} value={content.content_id}>\n                                    {content.name}\n                                </option>\n                            ))}\n                            </select>\n\n                        </div>\n\n                        <div className=\"divPdfs\">\n                            <label for=\"pdfs\">Choose images to upload (PNG, JPG)</label>\n                            <input type=\"file\" name=\"pdfs\" id=\"pdfs\" accept=\".pdf\" onChange={event => updateFiles(event.target.files)} multiple/>\n                        </div>\n                        <div class=\"preview\">\n                            <p>Nenhum arquivo selecionado</p>\n                        </div>\n\n                        <div id=\"message\" align='center'></div>\n\n                        <button ref={submitButton} type=\"submit\" hidden></button>\n                                    \n                    </form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Fechar\n                    </Button>\n                    <Button variant=\"primary\" \n                        onClick={e => { submitButton.current.click(); }}>\n                        Salvar\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </> \n        \n    );\n}"]},"metadata":{},"sourceType":"module"}