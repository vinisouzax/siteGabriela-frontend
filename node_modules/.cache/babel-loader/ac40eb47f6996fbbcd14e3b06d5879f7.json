{"ast":null,"code":"import _slicedToArray from \"/var/www/html/siteGabriela/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/var/www/html/siteGabriela/frontend/src/pages/Subject/index.js\";\nimport React, { useState, Fragment } from 'react';\nimport api from '../../services/api';\nimport { MDBDataTable } from 'mdbreact';\nimport { FaPlus, FaPen, FaExchangeAlt } from \"react-icons/fa\";\nimport { Button, Modal } from 'react-bootstrap';\nimport swal from 'sweetalert';\nimport { initialize } from '../../Util';\nexport default function Subject({\n  history\n}) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        subject_id = _useState4[0],\n        setSubjectId = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        show = _useState6[0],\n        setShow = _useState6[1];\n\n  const _useState7 = useState({}),\n        _useState8 = _slicedToArray(_useState7, 2),\n        data = _useState8[0],\n        setData = _useState8[1];\n\n  const submitButton = React.createRef(null);\n  let auth = initialize({\n    history\n  });\n  let subjects = [];\n\n  const handleShow = () => setShow(true);\n\n  const handleClose = () => {\n    setShow(false);\n    setSubjectId('');\n    setName('');\n  };\n\n  async function edit(event, id) {\n    event.preventDefault();\n\n    if (!auth) {\n      history.push('/Login');\n    } else {\n      let response = await api.get(`/subjects/${id}`, {\n        headers: {\n          authorization: auth[0].authorization\n        }\n      });\n      response = response.data;\n\n      if (response.result.length > 0) {\n        setName(response.result[0].name);\n        setSubjectId(id);\n        setShow(true);\n      }\n    }\n  }\n\n  async function del(event, id) {\n    event.preventDefault();\n    const willDelete = await swal({\n      title: \"Você tem certeza que irá alterar o status de ativação?\",\n      icon: \"warning\",\n      dangerMode: true\n    });\n\n    if (willDelete) {\n      let response = await api.delete(`/subjects/${id}`, {\n        headers: {\n          authorization: auth[0].authorization\n        }\n      });\n      response = response.data;\n\n      if (response.result.length > 0) {\n        swal(\"Alteração realizada com sucesso\");\n        loadSubjects();\n      } else {\n        document.getElementById(\"message\").innerHTML = \"Não foi possível alterar!\";\n      }\n    }\n  }\n\n  function returnEditHtml(id) {\n    const editHtml = React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: e => {\n        edit(e, id);\n      },\n      type: \"button\",\n      className: \"btn btn-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(FaPen, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })));\n    return editHtml;\n  }\n\n  function returnDeleteHtml(id) {\n    const deleteHtml = React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: e => {\n        del(e, id);\n      },\n      type: \"button\",\n      className: \"btn btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(FaExchangeAlt, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })));\n    return deleteHtml;\n  }\n\n  async function loadSubjects() {\n    let response = await api.get('/subjects/');\n    response = response.data;\n\n    if (response.result.length > 0) {\n      let data = [];\n\n      for (let i = 0; i < response.result.length; i++) {\n        data.push({\n          name: response.result[i].name,\n          active: response.result[i].active ? 'Ativo' : 'Inativo',\n          editar: returnEditHtml(response.result[i].subject_id),\n          status: returnDeleteHtml(response.result[i].subject_id)\n        });\n      }\n\n      subjects = data;\n      setData(data = {\n        columns: [{\n          label: 'Nome',\n          field: 'name',\n          sort: 'asc'\n        }, {\n          label: 'Ativo',\n          field: 'active',\n          sort: 'asc'\n        }, {\n          label: 'Editar',\n          field: 'editar',\n          sort: 'asc'\n        }, {\n          label: 'Status',\n          field: 'status',\n          sort: 'asc'\n        }],\n        rows: subjects\n      });\n    }\n  }\n\n  loadSubjects();\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    let auth = initialize({\n      history\n    });\n\n    if (subject_id !== '') {\n      let response = await api.put(`/subjects/${subject_id}`, {\n        name\n      }, {\n        headers: {\n          authorization: auth[0].authorization\n        }\n      });\n      response = response.data;\n\n      if (response.result.length > 0) {\n        handleClose();\n        swal(\"Edição realizada com sucesso\");\n        loadSubjects();\n      } else {\n        document.getElementById(\"message\").innerHTML = \"Não foi possível editar!\";\n      }\n    } else {\n      let response = await api.post('/subjects', {\n        name\n      }, {\n        headers: {\n          authorization: auth[0].authorization\n        }\n      });\n      response = response.data;\n\n      if (response.result.length > 0) {\n        handleClose();\n        swal(\"Cadastro realizado com sucesso\");\n        loadSubjects();\n      } else {\n        document.getElementById(\"message\").innerHTML = \"Não foi possível cadastrar!\";\n      }\n    }\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"centering\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card card-signin my-5 spacing\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"colorTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, \"Disciplinas\"), React.createElement(\"button\", {\n    onClick: handleShow,\n    className: \"btn btn-success col-lg-2 tableAdd\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(FaPlus, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  })), React.createElement(MDBDataTable, {\n    striped: true,\n    bordered: true,\n    small: true,\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  })))), React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    animation: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"Nova disciplina\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"form-signin\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-label-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    id: \"inputName\",\n    className: \"form-control\",\n    placeholder: \"Nome da disciplina\",\n    required: true,\n    autofocus: true,\n    value: name,\n    onChange: event => setName(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"inputName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, \" Nome*\")), React.createElement(\"div\", {\n    id: \"message\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    ref: submitButton,\n    type: \"submit\",\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }))), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, \"Fechar\"), React.createElement(Button, {\n    variant: \"primary\",\n    onClick: e => {\n      submitButton.current.click();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, \"Salvar\"))));\n}","map":{"version":3,"sources":["/var/www/html/siteGabriela/frontend/src/pages/Subject/index.js"],"names":["React","useState","Fragment","api","MDBDataTable","FaPlus","FaPen","FaExchangeAlt","Button","Modal","swal","initialize","Subject","history","name","setName","subject_id","setSubjectId","show","setShow","data","setData","submitButton","createRef","auth","subjects","handleShow","handleClose","edit","event","id","preventDefault","push","response","get","headers","authorization","result","length","del","willDelete","title","icon","dangerMode","delete","loadSubjects","document","getElementById","innerHTML","returnEditHtml","editHtml","e","returnDeleteHtml","deleteHtml","i","active","editar","status","columns","label","field","sort","rows","handleSubmit","put","post","target","value","current","click"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from 'react';\nimport api from '../../services/api';\nimport { MDBDataTable } from 'mdbreact';\nimport { FaPlus, FaPen, FaExchangeAlt } from \"react-icons/fa\";\nimport { Button, Modal } from 'react-bootstrap';\nimport swal from 'sweetalert';\nimport {initialize} from '../../Util';\n\nexport default function Subject({ history }){\n    const [name, setName] = useState('');\n    const [subject_id, setSubjectId] = useState('');\n    const [show, setShow] = useState(false);\n    const [data, setData] = useState({});\n    const submitButton = React.createRef(null);\n    let auth = initialize({history});\n    let subjects = [];\n    \n    const handleShow = () => setShow(true);\n    \n    const handleClose = () => { \n        setShow(false); \n        setSubjectId(''); \n        setName('');\n    };\n        \n    async function edit(event, id) {\n        event.preventDefault();\n        \n        if(!auth){\n            history.push('/Login');\n        }else{\n\n            let response = await api.get(`/subjects/${id}`, {\n                headers: {authorization: auth[0].authorization},\n            });\n\n            response = response.data;\n\n            if(response.result.length > 0){\n                setName(response.result[0].name);\n                setSubjectId(id);\n                setShow(true);\n            }\n        }\n    } \n\n    async function del(event, id) {\n        event.preventDefault();\n        const willDelete = await swal({\n            title: \"Você tem certeza que irá alterar o status de ativação?\",\n            icon: \"warning\",\n            dangerMode: true,\n        });\n        if (willDelete) {\n            let response = await api.delete(`/subjects/${id}`, \n            {headers: { authorization: auth[0].authorization }});\n    \n            response = response.data;\n            \n            if(response.result.length > 0){\n                swal(\"Alteração realizada com sucesso\");\n                loadSubjects();\n            }else{\n                document.getElementById(\"message\").innerHTML = \"Não foi possível alterar!\";\n            } \n        }\n    }\n\n    function returnEditHtml(id){\n        const editHtml = <Fragment>\n                            <button \n                                onClick={(e) => {edit(e, id)}} \n                                type=\"button\" \n                                className=\"btn btn-warning\"><FaPen />\n                            </button>\n                        </Fragment>\n\n        return editHtml;\n    }\n\n    function returnDeleteHtml(id){\n        const deleteHtml =  <Fragment>\n                                <button \n                                    onClick={(e) => {del(e, id)}}\n                                    type=\"button\" \n                                    className=\"btn btn-danger\"><FaExchangeAlt />\n                                </button>\n                            </Fragment>\n\n        return deleteHtml;\n    }\n\n    async function loadSubjects(){\n\n        let response = await api.get('/subjects/');\n\n        response = response.data;\n\n        if(response.result.length > 0){\n            let data = [];\n            for(let i = 0; i < response.result.length; i++){\n                data.push({\n                    name: response.result[i].name,\n                    active: (response.result[i].active) ? 'Ativo' : 'Inativo',\n                    editar: returnEditHtml(response.result[i].subject_id),\n                    status: returnDeleteHtml(response.result[i].subject_id)\n                });\n            }\n            subjects = data;\n            setData(data = {\n                columns: [\n                {\n                    label: 'Nome',\n                    field: 'name',\n                    sort: 'asc',\n                },\n                {\n                    label: 'Ativo',\n                    field: 'active',\n                    sort: 'asc',\n                },\n                {\n                    label: 'Editar',\n                    field: 'editar',\n                    sort: 'asc',\n                },\n                {\n                    label: 'Status',\n                    field: 'status',\n                    sort: 'asc',\n                },\n                ],\n                rows: subjects\n            })\n        }\n    }\n\n    loadSubjects();\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        let auth = initialize({history});\n\n        if(subject_id !== ''){\n            let response = await api.put(`/subjects/${subject_id}`, { name }, \n            {headers: { authorization: auth[0].authorization }});\n    \n            response = response.data;\n            \n            if(response.result.length > 0){\n                handleClose();\n                swal(\"Edição realizada com sucesso\");\n                loadSubjects();\n            }else{\n                document.getElementById(\"message\").innerHTML = \"Não foi possível editar!\";\n            }\n        }else{\n            let response = await api.post('/subjects', { name }, \n            {headers: { authorization: auth[0].authorization }});\n    \n            response = response.data;\n            \n            if(response.result.length > 0){\n                handleClose();\n                swal(\"Cadastro realizado com sucesso\");\n                loadSubjects();\n            }else{\n                document.getElementById(\"message\").innerHTML = \"Não foi possível cadastrar!\";\n            }  \n        }\n        \n    }\n    \n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"row\"></div>        \n                    <div className=\"centering\">\n                        <div className=\"card card-signin my-5 spacing\">\n                            <h3 className=\"colorTitle\">Disciplinas</h3>\n                        <button onClick={handleShow}\n                            className=\"btn btn-success col-lg-2 tableAdd\">\n                            <FaPlus />\n                        </button>  \n                        <MDBDataTable\n                            striped\n                            bordered\n                            small\n                            data={data}\n                        />\n                        </div>\n                    </div>\n            </div>\n\n            <Modal show={show} onHide={handleClose} animation={false}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Nova disciplina</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <form className=\"form-signin\" onSubmit={handleSubmit}>\n                        <div className=\"form-label-group\">\n                            <input type=\"text\" \n                            id=\"inputName\" \n                            className=\"form-control\" \n                            placeholder=\"Nome da disciplina\" required autofocus\n                            value={name}\n                            onChange={event => setName(event.target.value)}/>\n                            <label htmlFor=\"inputName\"> Nome*</label>\n                        </div>\n\n                        <div id=\"message\" align='center'></div>\n\n                        <button ref={submitButton} type=\"submit\" hidden></button>\n                                    \n                    </form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Fechar\n                    </Button>\n                    <Button variant=\"primary\" \n                        onClick={e => { submitButton.current.click(); }}>\n                        Salvar\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </> \n        \n    );\n}"]},"metadata":{},"sourceType":"module"}