{"ast":null,"code":"import _slicedToArray from \"/var/www/html/siteGabriela/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/var/www/html/siteGabriela/frontend/src/pages/FormArticle/index.js\";\nimport React, { useState } from 'react';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { initialize } from '../../Util';\nexport default function FormArticle({\n  history\n}) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        title = _useState2[0],\n        setTitle = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        pdfs = _useState4[0],\n        setPdfs = _useState4[1];\n\n  initialize({\n    history\n  });\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    if (subject_id !== '') {\n      let response = await api.put(`/subjects/${subject_id}`, {\n        name\n      }, {\n        headers: {\n          authorization: auth[0].authorization\n        }\n      });\n      response = response.data;\n\n      if (response.result.length > 0) {\n        loadSubjects();\n        handleClose();\n        swal(\"Edição realizada com sucesso\");\n      } else {\n        document.getElementById(\"message\").innerHTML = \"Não foi possível editar!\";\n      }\n    } else {\n      let response = await api.post('/subjects', {\n        name\n      }, {\n        headers: {\n          authorization: auth[0].authorization\n        }\n      });\n      response = response.data;\n\n      if (response.result.length > 0) {\n        loadSubjects();\n        handleClose();\n        swal(\"Cadastro realizado com sucesso\");\n      } else {\n        document.getElementById(\"message\").innerHTML = \"Não foi possível cadastrar!\";\n      }\n    }\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"centering\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card card-signin my-5 spacing\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"App spacing\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Cadastro\"), React.createElement(\"div\", {\n    className: \"form-label-group margin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    id: \"inputTitle\",\n    className: \"form-control\",\n    placeholder: \"T\\xEDtulo do artigo\",\n    required: true,\n    value: title,\n    onChange: event => setTitle(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"inputTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \" T\\xEDtulo*\")), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(CKEditor, {\n    editor: ClassicEditor,\n    data: \"<p>Hello from CKEditor 5!</p>\",\n    onInit: editor => {\n      // You can store the \"editor\" and use when it is needed.\n      console.log('Editor is ready to use!', editor);\n    },\n    onChange: (event, editor) => {\n      const data = editor.getData();\n      console.log({\n        event,\n        editor,\n        data\n      });\n    },\n    onBlur: (event, editor) => {\n      console.log('Blur.', editor);\n    },\n    onFocus: (event, editor) => {\n      console.log('Focus.', editor);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"form-group margin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    name: \"imgCollection\",\n    onChange: event => setPdfs(event.target.files),\n    multiple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"btn btn-lg btn-primary btn-block text-uppercase buttonSave margin\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Salvar\"))))));\n}","map":{"version":3,"sources":["/var/www/html/siteGabriela/frontend/src/pages/FormArticle/index.js"],"names":["React","useState","CKEditor","ClassicEditor","initialize","FormArticle","history","title","setTitle","pdfs","setPdfs","handleSubmit","event","preventDefault","subject_id","response","api","put","name","headers","authorization","auth","data","result","length","loadSubjects","handleClose","swal","document","getElementById","innerHTML","post","target","value","editor","console","log","getData","files"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport {initialize} from '../../Util';\n\nexport default function FormArticle({history}){\n    const [title, setTitle] = useState('');\n    const [pdfs, setPdfs] = useState('');\n    initialize({history});\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        if(subject_id !== ''){\n            let response = await api.put(`/subjects/${subject_id}`, { name }, \n            {headers: { authorization: auth[0].authorization }});\n    \n            response = response.data;\n            \n            if(response.result.length > 0){\n                loadSubjects();\n                handleClose();\n                swal(\"Edição realizada com sucesso\");\n            }else{\n                document.getElementById(\"message\").innerHTML = \"Não foi possível editar!\";\n            }\n        }else{\n            let response = await api.post('/subjects', { name }, \n            {headers: { authorization: auth[0].authorization }});\n    \n            response = response.data;\n            \n            if(response.result.length > 0){\n                loadSubjects();\n                handleClose();\n                swal(\"Cadastro realizado com sucesso\");\n            }else{\n                document.getElementById(\"message\").innerHTML = \"Não foi possível cadastrar!\";\n            }  \n        }\n    }\n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"row\"></div>        \n                <div className=\"centering\">\n                    <div className=\"card card-signin my-5 spacing\">\n                        <form className=\"App spacing\">\n                            <h2>Cadastro</h2>\n                            <div className=\"form-label-group margin\">\n                                <input type=\"text\" \n                                id=\"inputTitle\" \n                                className=\"form-control\" \n                                placeholder=\"Título do artigo\" required\n                                value={title}\n                                onChange={event => setTitle(event.target.value)}/>\n                                <label htmlFor=\"inputTitle\"> Título*</label>\n                            </div>\n                            <hr></hr>\n                            <CKEditor\n                                editor={ ClassicEditor }\n                                data=\"<p>Hello from CKEditor 5!</p>\"\n                                onInit={ editor => {\n                                    // You can store the \"editor\" and use when it is needed.\n                                    console.log( 'Editor is ready to use!', editor );\n                                } }\n                                onChange={ ( event, editor ) => {\n                                    const data = editor.getData();\n                                    console.log( { event, editor, data } );\n                                } }\n                                onBlur={ ( event, editor ) => {\n                                    console.log( 'Blur.', editor );\n                                } }\n                                onFocus={ ( event, editor ) => {\n                                    console.log( 'Focus.', editor );\n                                } }\n                            />\n                            <div className=\"form-group margin\">\n                                <input type=\"file\" name=\"imgCollection\" onChange={event => setPdfs(event.target.files)} multiple />\n                            </div>\n                            <button className=\"btn btn-lg btn-primary btn-block text-uppercase buttonSave margin\" \n                                type=\"submit\">Salvar</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </> \n        \n    );\n}"]},"metadata":{},"sourceType":"module"}