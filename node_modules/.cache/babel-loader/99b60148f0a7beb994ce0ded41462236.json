{"ast":null,"code":"import _slicedToArray from \"/var/www/html/siteGabriela/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/var/www/html/siteGabriela/frontend/src/pages/Sidebar/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport api from '../../services/api';\nimport { BrowserRouter, Link } from 'react-router-dom';\nexport default function Sidebar() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        subjects = _useState2[0],\n        setSubjects = _useState2[1];\n\n  useEffect(() => {\n    async function loadSubjects() {\n      let response = await api.get('/subjects');\n      response = response.data;\n\n      if (response.result.length > 0) {\n        let data = [];\n\n        for (let i = 0; i < response.result.length; i++) {\n          if (response.result[i].active === true) {\n            data.push({\n              subject_id: response.result[i].subject_id,\n              name: response.result[i].name\n            });\n          }\n        }\n\n        setSubjects(data);\n      }\n    }\n\n    loadSubjects();\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, subjects.map(subject => React.createElement(Link, {\n    to: {\n      pathname: '../pages/SubjectView',\n      state: {\n        subject: subject.subject_id\n      }\n    },\n    key: subject.subject_id,\n    className: \"list-group-item list-group-item-action bg-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, subject.name))));\n}","map":{"version":3,"sources":["/var/www/html/siteGabriela/frontend/src/pages/Sidebar/index.js"],"names":["React","useEffect","useState","api","BrowserRouter","Link","Sidebar","subjects","setSubjects","loadSubjects","response","get","data","result","length","i","active","push","subject_id","name","map","subject","pathname","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,SAASC,aAAT,EAAwBC,IAAxB,QAAoC,kBAApC;AAEA,eAAe,SAASC,OAAT,GAAkB;AAAA,oBACGJ,QAAQ,CAAC,EAAD,CADX;AAAA;AAAA,QACtBK,QADsB;AAAA,QACZC,WADY;;AAG7BP,EAAAA,SAAS,CAAC,MAAK;AACX,mBAAeQ,YAAf,GAA6B;AACzB,UAAIC,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAJ,CAAQ,WAAR,CAArB;AACAD,MAAAA,QAAQ,GAAGA,QAAQ,CAACE,IAApB;;AAEA,UAAGF,QAAQ,CAACG,MAAT,CAAgBC,MAAhB,GAAyB,CAA5B,EAA8B;AAC1B,YAAIF,IAAI,GAAG,EAAX;;AACA,aAAI,IAAIG,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGL,QAAQ,CAACG,MAAT,CAAgBC,MAAnC,EAA2CC,CAAC,EAA5C,EAA+C;AAC3C,cAAGL,QAAQ,CAACG,MAAT,CAAgBE,CAAhB,EAAmBC,MAAnB,KAA8B,IAAjC,EAAsC;AAClCJ,YAAAA,IAAI,CAACK,IAAL,CAAU;AACNC,cAAAA,UAAU,EAAER,QAAQ,CAACG,MAAT,CAAgBE,CAAhB,EAAmBG,UADzB;AAENC,cAAAA,IAAI,EAAET,QAAQ,CAACG,MAAT,CAAgBE,CAAhB,EAAmBI;AAFnB,aAAV;AAIH;AACJ;;AACDX,QAAAA,WAAW,CAACI,IAAD,CAAX;AACH;AAEJ;;AAEDH,IAAAA,YAAY;AACf,GArBQ,EAqBN,EArBM,CAAT;AAuBA,SACI,0CACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,QAAQ,CAACa,GAAT,CAAaC,OAAO,IACjB,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE;AACNC,MAAAA,QAAQ,EAAE,sBADJ;AAENC,MAAAA,KAAK,EAAE;AAAEF,QAAAA,OAAO,EAAEA,OAAO,CAACH;AAAnB;AAFD,KAAV;AAII,IAAA,GAAG,EAAEG,OAAO,CAACH,UAJjB;AAKI,IAAA,SAAS,EAAC,iDALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMSG,OAAO,CAACF,IANjB,CADH,CADL,CADJ,CADJ;AAgBH","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport api from '../../services/api';\nimport { BrowserRouter, Link } from 'react-router-dom';\n\nexport default function Sidebar(){\n    const [subjects, setSubjects] = useState([]);\n\n    useEffect(() =>{\n        async function loadSubjects(){\n            let response = await api.get('/subjects');\n            response = response.data;\n            \n            if(response.result.length > 0){\n                let data = [];\n                for(let i = 0; i < response.result.length; i++){\n                    if(response.result[i].active === true){\n                        data.push({\n                            subject_id: response.result[i].subject_id,\n                            name: response.result[i].name,\n                        });\n                    }\n                }\n                setSubjects(data);\n            }\n            \n        }\n\n        loadSubjects();\n    }, []);\n\n    return (\n        <>\n            <BrowserRouter>\n                {subjects.map(subject => (\n                    <Link to={{\n                        pathname: '../pages/SubjectView',\n                        state: { subject: subject.subject_id }\n                        }}\n                        key={subject.subject_id}\n                        className=\"list-group-item list-group-item-action bg-light\">\n                            {subject.name}\n                    </Link>\n                ))}\n            </BrowserRouter>\n        </>\n    );\n}"]},"metadata":{},"sourceType":"module"}