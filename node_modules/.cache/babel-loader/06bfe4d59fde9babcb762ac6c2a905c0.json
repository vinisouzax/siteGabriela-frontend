{"ast":null,"code":"import _slicedToArray from \"/var/www/html/siteGabriela/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/var/www/html/siteGabriela/frontend/src/pages/FormArticle/index.js\";\nimport React, { useState } from 'react';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { initialize } from '../../Util';\nimport api from '../../services/api';\nimport swal from 'sweetalert';\nexport default function FormArticle({\n  history\n}) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        title = _useState2[0],\n        setTitle = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        pdfs = _useState4[0],\n        setPdfs = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        txt_dsc = _useState6[0],\n        setTxt_dsc = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        subject = _useState8[0],\n        setSubject = _useState8[1];\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        subjects = _useState10[0],\n        setSubjects = _useState10[1];\n\n  let auth = initialize({\n    history\n  });\n\n  async function loadSubjects() {\n    let response = await api.get('/subjects');\n    response = response.data;\n\n    if (response.result.length > 0) {\n      let data = [];\n\n      for (let i = 0; i < response.result.length; i++) {\n        if (response.result[i].active === true) {\n          data.push({\n            subject_id: response.result[i].subject_id,\n            name: response.result[i].name\n          });\n        }\n      }\n\n      setSubjects(data);\n    }\n  }\n\n  loadSubjects();\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    let formData = new FormData();\n\n    for (const key of Object.keys(pdfs)) {\n      formData.append('pdfs', pdfs[key]);\n    }\n\n    formData.append('txt_dsc', txt_dsc);\n    formData.append('title', title);\n    let response = await api.post('/articles', formData, {\n      headers: {\n        authorization: auth[0].authorization\n      }\n    });\n    response = response.data;\n\n    if (response.result.length > 0) {\n      swal(\"Cadastro realizado com sucesso\");\n    } else {\n      document.getElementById(\"message\").innerHTML = \"Não foi possível cadastrar!\";\n    }\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"centering\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card card-signin my-5 spacing\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"App spacing\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Cadastro\"), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-label-group margin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    id: \"inputTitle\",\n    className: \"form-control\",\n    placeholder: \"T\\xEDtulo do artigo\",\n    required: true,\n    value: title,\n    onChange: event => setTitle(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"inputTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \" T\\xEDtulo*\"))), React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-label-group margin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    type: \"text\",\n    id: \"selectSubject\",\n    className: \"form-control\",\n    required: true,\n    value: subject,\n    onChange: event => setSubject(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, subjects.map(subject => React.createElement(\"option\", {\n    key: subject.subject_id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, subject.name)))))), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(CKEditor, {\n    editor: ClassicEditor,\n    data: \"<p>Digite a descri\\xE7\\xE3o do artigo aqui!</p>\",\n    onInit: editor => {// You can store the \"editor\" and use when it is needed.\n      //console.log( 'Editor is ready to use!', editor );\n    },\n    onChange: (event, editor) => {\n      const data = editor.getData();\n      setTxt_dsc(data); //console.log( { event, editor, data } );\n    },\n    onBlur: (event, editor) => {//console.log( 'Blur.', editor );\n    },\n    onFocus: (event, editor) => {//console.log( 'Focus.', editor );\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"form-group margin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    name: \"pdfs\",\n    id: \"pdfs\",\n    onChange: event => setPdfs(event.target.files),\n    multiple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"btn btn-lg btn-primary btn-block text-uppercase buttonSave margin\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Salvar\"))))));\n}","map":{"version":3,"sources":["/var/www/html/siteGabriela/frontend/src/pages/FormArticle/index.js"],"names":["React","useState","CKEditor","ClassicEditor","initialize","api","swal","FormArticle","history","title","setTitle","pdfs","setPdfs","txt_dsc","setTxt_dsc","subject","setSubject","subjects","setSubjects","auth","loadSubjects","response","get","data","result","length","i","active","push","subject_id","name","handleSubmit","event","preventDefault","formData","FormData","key","Object","keys","append","post","headers","authorization","document","getElementById","innerHTML","target","value","map","editor","getData","files"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport {initialize} from '../../Util';\nimport api from '../../services/api';\nimport swal from 'sweetalert';\n\nexport default function FormArticle({history}){\n    const [title, setTitle] = useState('');\n    const [pdfs, setPdfs] = useState('');\n    const [txt_dsc, setTxt_dsc] = useState('');\n    const [subject, setSubject] = useState('');\n    const [subjects, setSubjects] = useState([]);\n\n    let auth = initialize({history});\n\n    async function loadSubjects(){\n        let response = await api.get('/subjects');\n        response = response.data;\n        \n        if(response.result.length > 0){\n            let data = [];\n            for(let i = 0; i < response.result.length; i++){\n                if(response.result[i].active === true){\n                    data.push({\n                        subject_id: response.result[i].subject_id,\n                        name: response.result[i].name,\n                    });\n                }\n            }\n            setSubjects(data);\n        }\n        \n    }\n\n    loadSubjects();\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n\n        let formData = new FormData();\n\n        for (const key of Object.keys(pdfs)) {\n            formData.append('pdfs', pdfs[key]);\n        }\n\n        formData.append('txt_dsc', txt_dsc);\n        formData.append('title', title);\n\n        let response = await api.post('/articles', formData , \n        {headers: { authorization: auth[0].authorization }});\n\n        response = response.data;\n        \n        if(response.result.length > 0){\n            swal(\"Cadastro realizado com sucesso\");\n        }else{\n            document.getElementById(\"message\").innerHTML = \"Não foi possível cadastrar!\";\n        } \n    }\n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"row\"></div>        \n                <div className=\"centering\">\n                    <div className=\"card card-signin my-5 spacing\">\n                        <form className=\"App spacing\" onSubmit={handleSubmit}>\n                            <h2>Cadastro</h2>\n                            <div className=\"row\">\n                                <div className=\"col\">\n                                    <div className=\"form-label-group margin\">\n                                        <input type=\"text\" \n                                        id=\"inputTitle\" \n                                        className=\"form-control\" \n                                        placeholder=\"Título do artigo\" required\n                                        value={title}\n                                        onChange={event => setTitle(event.target.value)}/>\n                                        <label htmlFor=\"inputTitle\"> Título*</label>\n                                    </div>\n                                </div>\n                                <div className=\"col\">\n                                    <div className=\"form-label-group margin\">\n                                        <select type=\"text\" \n                                        id=\"selectSubject\" \n                                        className=\"form-control\" required\n                                        value={subject}\n                                        onChange={event => setSubject(event.target.value)}>\n                                        {subjects.map(subject => (\n                                            <option key={subject.subject_id}>\n                                                {subject.name}\n                                            </option>\n                                        ))}\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>\n                            <hr></hr>\n                            <CKEditor\n                                editor={ ClassicEditor }\n                                data=\"<p>Digite a descrição do artigo aqui!</p>\"\n                                onInit={ editor => {\n                                    // You can store the \"editor\" and use when it is needed.\n                                    //console.log( 'Editor is ready to use!', editor );\n                                } }\n                                onChange={ ( event, editor ) => {\n                                    const data = editor.getData();\n                                    setTxt_dsc(data);\n                                    //console.log( { event, editor, data } );\n                                } }\n                                onBlur={ ( event, editor ) => {\n                                    //console.log( 'Blur.', editor );\n                                } }\n                                onFocus={ ( event, editor ) => {\n                                    //console.log( 'Focus.', editor );\n                                } }\n                            />\n                            <div className=\"form-group margin\">\n                                <input type=\"file\" name=\"pdfs\" id=\"pdfs\" onChange={event => setPdfs(event.target.files)} multiple />\n                            </div>\n                            <button className=\"btn btn-lg btn-primary btn-block text-uppercase buttonSave margin\" \n                                type=\"submit\">Salvar</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </> \n        \n    );\n}"]},"metadata":{},"sourceType":"module"}